package juego;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;

public class administracion {
	String respuesta="Si", clase, fisico1, fisico2, magico1, magico2, eficacia, nombre="", equip1, equip2;
	boolean victoria=false, guantes=false, sombrero=false, pechera=false, tunica=false;
	int hp =0, opcion, contador=0;
	Scanner sc = new Scanner(System.in);
	
	personaje p1;
	enemigos e1 = new enemigos(nombre, hp);
	enemigos e2 = new enemigos(nombre, hp);
	enemigos e3 = new enemigos(nombre, hp);
	enemigos e4 = new enemigos();
	
	protected void CrearPersonaje(String fisicos[], String magicos[], String eficacias[], ArrayList <personaje> arrayPersonaje) {
		System.out.println("Cada personaje creado solo puede tener 2 atributos fisicos, 2 atributos magicos y 1 efectividad");		
		
		do {
		contador = 0;
			System.out.print("Indique el nombre de su personaje: ");
			nombre = sc.next();
		Iterator<personaje> probar = arrayPersonaje.iterator();
		while(probar.hasNext()) {
			personaje nombrePer = probar.next();	
			if (nombrePer.getNombre().equals(nombre)){
				contador++; 
			}
		}
		if (contador > 0) {
			System.out.println("El personaje ya existe");

		}
		} while (contador > 0);
		
		do {
			System.out.println("Elija su clase: ");
			System.out.println("Luchador / Hechicero");
			clase = sc.next();
		} while(!clase.equals("Luchador") && !clase.equals("Hechicero"));
		
		do {
			System.out.println("¿Desea equiparse la parte superior del equipamiento?");
			System.out.println("Si o No");
			equip1= sc.next();
		} while(!equip1.equals("Si") && !equip1.equals("No"));
		
		do {
			System.out.println("¿Desea equiparse la parte inferior del equipamiento?");
			System.out.println("Si o No");
			equip2= sc.next();
		} while (!equip2.equals("Si") && !equip2.equals("No"));
		//Recoger atributos fisicos
		do {
			System.out.println("Elija sus atributos fisicos");
			Fisicos(fisicos);
			System.out.print("Principal: ");
			fisico1 = sc.next();
			System.out.print("Secundario: ");
			fisico2 = sc.next();
		
			for (int i = 0; i < fisicos.length;i++) {
				if (fisico1.equals(fisicos[i])) {
					contador++;
				}
				if (fisico2.equals(fisicos[i])) {
					contador++;
				}
			}
			if (contador == 2) {
				respuesta = "Si";
				contador = 0;
			}
			else if (contador != 2) {
				System.out.println("Indique un atributo existente");
				respuesta = "No";
				contador = 0;
			}
		} while (respuesta.equals("No"));
		//Recoger atributos magicos
		do {
			System.out.println("Elija sus atributos magicos");
			Magicos(magicos);
			System.out.print("Principal: ");
			magico1 = sc.next();
			System.out.print("Secundario: ");
			magico2 = sc.next();
		
			for (int i = 0; i < magicos.length;i++) {
				if (magico1.equals(magicos[i])) {
					contador++;
				}
				if (magico2.equals(magicos[i])) {
					contador++;
				}
			}
			if (contador == 2) {
				respuesta = "Si";
				contador = 0;
			}
			else if (contador != 2) {
				System.out.println("Indique un atributo existente");
				respuesta = "No";
				contador = 0;
			}
		} while (respuesta.equals("No"));
		
		//Recoger atributos titulo
		//do {
			contador = 0;
		System.out.println("Elija su titulo");
		Titulos(eficacias);
		sc.nextLine(); //Este next es para corregir un error al recoger la variable del titulo
		eficacia = sc.nextLine();
		/*for (int i = 0; i < eficacias.length;i++) {
				if (eficacia.equals(eficacias[i])) {
					contador++;
				}
			}
			if (contador == 1) {
				respuesta = "Si";
				System.out.println(eficacia);
			}
			else if (contador != 1) {
				System.out.println("Indique un atributo existente");
				respuesta = "No";
				System.out.println(eficacia);
			}
		} while (contador != 1);*/
		//No llega a funcionar del todo bien, al repetir el bucle por segunda vez el programa se para
		
	
		if (clase.equals("Luchador")) {
			p1 = new luchador(nombre, fisico1, fisico2, magico1, magico2, eficacia, guantes, pechera);
			if (equip1.equals("Si")) {
				if (p1 instanceof luchador) {
					((luchador)p1).setGuantes(true);
				}
			}
			if (equip2.equals("Si")) {
				if (p1 instanceof luchador) {
					((luchador)p1).setPechera(true);
				}
			}

			System.out.println("Nombre: " + p1.getNombre());
			System.out.println("Destreza principal: " + p1.getFisico1());
			System.out.println("Destreza secundaria: " + p1.getFisico2());
			System.out.println("Magia principal: " + p1.getMagico1());
			System.out.println("Magia secundaria: " + p1.getMagico2());
			System.out.println("Titulo: " + p1.getEficacia());
			System.out.println("Pechera: " + ((luchador)p1).isPechera());
			System.out.println("Guantes: " + ((luchador)p1).isGuantes());					
			arrayPersonaje.add(p1);
		} 
		else if (clase.equals("Hechicero")) {
			p1 = new hechicero(nombre, fisico1, fisico2, magico1, magico2, eficacia, sombrero, tunica);
			if (equip1.equals("Si")) {
				if (p1 instanceof hechicero) {
					((hechicero)p1).setSombrero(true);
				}
			}
			if (equip2.equals("Si")) {
				if (p1 instanceof hechicero) {
					((hechicero)p1).setTunica(true);
				}
			}
			System.out.println("Nombre: " + p1.getNombre());
			System.out.println("Destreza principal: " + p1.getFisico1());
			System.out.println("Destreza secundaria: " + p1.getFisico2());
			System.out.println("Magia principal: " + p1.getMagico1());
			System.out.println("Magia secundaria: " + p1.getMagico2());
			System.out.println("Titulo: " + p1.getEficacia());
			System.out.println("Tunica:" + ((hechicero)p1).isTunica());
			System.out.println("Sombrero: " + ((hechicero)p1).isSombrero());		
			arrayPersonaje.add(p1);
		}
	}
	
	protected void VerPersonajes(ArrayList <personaje> arrayPersonaje) {
		Iterator<personaje> verPer = arrayPersonaje.iterator();
		while(verPer.hasNext()) {
			personaje nombrePersonaje = verPer.next();
			System.out.println("- Nombre: " + nombrePersonaje.getNombre());
			System.out.println("Stats fisicos: Principal - " + nombrePersonaje.getFisico1() + " Secundario - " + nombrePersonaje.getFisico2());
			System.out.println("Stats Magicos: Principal - " + nombrePersonaje.getMagico1() + " Secundario - " + nombrePersonaje.getMagico2());
			System.out.println("Titulo: " + nombrePersonaje.getEficacia());
			if (nombrePersonaje instanceof luchador) {
				System.out.println("Equipamiento- Pechera: " + ((luchador)nombrePersonaje).isPechera() + " Guantes: "+ ((luchador)nombrePersonaje).isGuantes());
			}
			else if (nombrePersonaje instanceof hechicero) {
				System.out.println("Equipamiento- Tunica: " + ((hechicero)nombrePersonaje).isTunica() + " Sombrero: " + ((hechicero)nombrePersonaje).isSombrero());
			}
		}
	}
	
	protected void EnemigosPredefinidos(ArrayList <enemigos> arrayEnemigos) {
		e1.setNombre("Slime Gigante");// Debilidades - Agilidad, Velocidad, Gravitacion, Petrificacion 
		e1.setHp(500);				 // Ventajas - Fuerza, Astucia , Ilusionismo, Espiritualismo
		arrayEnemigos.add(e1);	
		e2.setNombre("Jinete Fantasma"); // Debilidades - Velocidad, Agilidad, Ilusionismo, Espiritualismo
		e2.setHp(1000);					// Ventajas - Fuerza, Astucia, Petrificacion, Gravitacion
		arrayEnemigos.add(e2);		
		e3.setNombre("Dragon Ilusorio");// Debilidades -  Fuerza, Astucia, Agilidad, Petrificacion, Gravitacion
		e3.setHp(1500);				   // Ventajas - Velocidad, Agilidad, Ilusionismo, Espiritualismo
		arrayEnemigos.add(e3);
	}
	
	protected void Mazmorra(ArrayList <enemigos> arrayEnemigos, ArrayList <personaje> arrayPersonaje) {
		String enemigo="", EF1, EF2, EM1, EM2;
		
		if (victoria == true) {
			do {
				System.out.println("Indica el nombre del enemigo: ");
				enemigo = sc.next();
					Iterator<enemigos> probar = arrayEnemigos.iterator();
					while(probar.hasNext()) {
						enemigos nombreEnemigo = probar.next();	
						if (nombreEnemigo.getNombre().equals(nombre)){
							contador++;
						}
					}
					if (contador <= 0) {
						System.out.println("El personaje ya existe");
					}
			} while (contador <= 0);
		}
		
		do {
			contador = 0;
			System.out.println("Indica el nombre del personaje que vas a usar: ");
			nombre = sc.next();
				Iterator<personaje> probar = arrayPersonaje.iterator();
				while(probar.hasNext()) {
					personaje nombrePer = probar.next();	
					if (nombrePer.getNombre().equals(nombre)){
						contador++;
						//Recoger Stadisticas del heroe
						System.out.println("Has escogido al heroe " + nombrePer.getNombre());
						fisico1 = nombrePer.getFisico1();
						fisico2 = nombrePer.getFisico2();
						magico1 = nombrePer.getMagico1();
						magico2 = nombrePer.getMagico2();
						eficacia = nombrePer.getEficacia();
						if (nombrePer instanceof luchador) {
							pechera = ((luchador)nombrePer).isPechera();
							guantes = ((luchador)nombrePer).isGuantes();
						}
						else if (nombrePer instanceof hechicero) {
							tunica = ((hechicero)nombrePer).isTunica();
							sombrero = ((hechicero)nombrePer).isSombrero();
						}
						Iterator<enemigos> itEnemigos = arrayEnemigos.iterator();
						while(itEnemigos.hasNext() && respuesta.equals("Si")) {
							enemigos nombreEnemigo = itEnemigos.next();
							hp = nombreEnemigo.getHp();
							System.out.println(nombreEnemigo.getNombre());
							//COMBATE CONTRA EL PRIMER JEFE
							while (respuesta.equals("Si") && hp > 0 && nombreEnemigo.getNombre().equals("Slime Gigante")) {
							
									hp = nombreEnemigo.CombateSlime(nombre, fisico1, fisico2, magico1, magico2, eficacia, hp, guantes, pechera, tunica, sombrero);
									respuesta = FinalizarCombate(respuesta, hp, nombreEnemigo, sc);
							 //Fin Combate Slime
							} 
							//COMBATE CONTRA EL SEGUNDO JEFE
							while (respuesta.equals("Si") && hp > 0 && nombreEnemigo.getNombre().equals("Jinete Fantasma")) {

								hp = nombreEnemigo.CombateJinete(nombre, fisico1, fisico2, magico1, magico2, eficacia, hp, guantes, pechera, tunica, sombrero);
								respuesta = FinalizarCombate(respuesta, hp, nombreEnemigo, sc);
						 //Fin Combate Jinete
							}
							//COMBATE CONTRA EL TERCER JEFE
							while (respuesta.equals("Si") && hp > 0 && nombreEnemigo.getNombre().equals("Dragon Ilusorio")){
								hp = nombreEnemigo.CombateDragon(nombre, fisico1, fisico2, magico1, magico2, eficacia, hp, guantes, pechera, tunica, sombrero);
								respuesta = FinalizarCombate(respuesta, hp, nombreEnemigo, sc);
							//Fin Combate Dragon
							}
							if (victoria == true) {
								while (respuesta.equals("Si") && hp > 0 && nombreEnemigo.getNombre().equals(enemigo)){
									
										if (nombreEnemigo.getNombre().equals(enemigo)){
											enemigo = nombreEnemigo.getNombre();
											EF1 = nombreEnemigo.getFisico1();
											EF2 = nombreEnemigo.getFisico2();
											EM1 = nombreEnemigo.getMagico1();
											EM2 = nombreEnemigo.getMagico2();
											equip1 = nombreEnemigo.getEquip1();
											equip2 = nombreEnemigo.getEquip2();
											hp = nombreEnemigo.getHp();
											hp = nombreEnemigo.CombateExtra(nombre, fisico1, fisico2, magico1, magico2, hp, guantes, pechera, tunica, sombrero, EF1, EF2, EM1, EM2, enemigo, equip1, equip2);
											respuesta = FinalizarCombate(respuesta, hp, nombreEnemigo, sc);
										}
										else {
											System.out.println("El enemigo no existe");
											respuesta = "No";
										}
								}
							}
							if (nombreEnemigo.getNombre().equals("Dragon Ilusorio") && hp <= 0) {
								System.out.println("Has derrotado a todos los enemigos de la mazmorra");
								victoria = true;
							}
							//COMBATE CONTRA ENEMIGO EXTRA
							
						}//Fin Combates contra enemigos
					}

				}
				if (contador <= 0) {
					System.out.println("El personaje no existe");
				}
		} while (contador <= 0);
		
		contador = 0;
		respuesta = "Si";
	}
	
	protected void CrearEnemigo(String fisicos[], String magicos[], String eficacias[], ArrayList <enemigos> arrayEnemigos) {
		String enemigo="" , opcion2;
		if (victoria == false) {
			System.out.println("Tienes que derrotar a todos los enemigos de la mazmorra par acceder a esta opcion");
		}
		else if (victoria == true) {
			System.out.println("1. Crear un enemigo");
			System.out.println("2. Modificar un enemigo");
			opcion = sc.nextInt();
			
			switch (opcion) {
				case 1:
						System.out.println("Los enemigos creado solo puede tener ventajas y debilidades 2 fisicos y 2 magicos");
						
						do {
							contador = 0;
							System.out.println("Indica el nombre del enemigo: ");
							nombre = sc.next();
								Iterator<enemigos> probar = arrayEnemigos.iterator();
								while(probar.hasNext()) {
									enemigos nombreEnemigo = probar.next();	
									if (nombreEnemigo.getNombre().equals(nombre)){
										contador++;
									}
								}
								if (contador <= 0) {
									System.out.println("El enemigo ya existe");
								}

						} while (contador <= 0);
						
						do {
							System.out.println("La clase contra el cual es debil: ");
							System.out.println("Luchador / Hechicero");
							clase = sc.next();
						} while(!clase.equals("Luchador") && !clase.equals("Hechicero"));
						
						do {
							System.out.println("¿Interfiere el equipamiento superior?");
							System.out.println("Si o No");
							equip1= sc.next();
						} while(!equip1.equals("Si") && !equip1.equals("No"));
						
						do {
							System.out.println("¿Interfiere el equipamiento inferior?");
							System.out.println("Si o No");
							equip2= sc.next();
						} while (!equip2.equals("Si") && !equip2.equals("No"));
						//Recoger atributos fisicos
						do {
							System.out.println("Elija sus debilidades fisicas");
							Fisicos(fisicos);
							System.out.print("Principal: ");
							fisico1 = sc.next();
							System.out.print("Secundario: ");
							fisico2 = sc.next();
						
							for (int i = 0; i < fisicos.length;i++) {
								if (fisico1.equals(fisicos[i])) {
									contador++;
								}
								if (fisico2.equals(fisicos[i])) {
									contador++;
								}
							}
							if (contador == 2) {
								respuesta = "Si";
								contador = 0;
							}
							else if (contador != 2) {
								System.out.println("Indique un atributo existente");
								respuesta = "No";
								contador = 0;
							}
						} while (respuesta.equals("No"));
						//Recoger atributos magicos
						do {
							System.out.println("Elija sus debilidades magicos");
							Magicos(magicos);
							System.out.print("Principal: ");
							magico1 = sc.next();
							System.out.print("Secundario: ");
							magico2 = sc.next();
						
							for (int i = 0; i < magicos.length;i++) {
								if (magico1.equals(magicos[i])) {
									contador++;
								}
								if (magico2.equals(magicos[i])) {
									contador++;
								}
							}
							if (contador == 2) {
								respuesta = "Si";
								contador = 0;
							}
							else if (contador != 2) {
								System.out.println("Indique un atributo existente");
								respuesta = "No";
								contador = 0;
							}
						} while (respuesta.equals("No"));
						
						do {
							System.out.println("Indica la vida del enemigo");
							hp = sc.nextInt();
							
							if (hp <= 0) {
								System.out.println("El enemigo no tiene suficiente vida");
							}
						} while (hp <= 0);
						
							e4 = new enemigos(nombre, fisico1, fisico2, magico1, magico2, equip1, equip2, hp);
							System.out.println("Nombre: " + e4.getNombre());
							System.out.println("Debilidad fisica principal: " + e4.getFisico1());
							System.out.println("Debilidad fisica secundaria: " + e4.getFisico2());
							System.out.println("Debilidad magica principal: " + e4.getMagico1());
							System.out.println("Debilidad magica secundaria: " + e4.getMagico2());
							System.out.println("Hp: " + ((enemigos)e4).getHp());					
							arrayEnemigos.add(e4);

				break;
				case 2:
				
					do {
						System.out.print("Indique el nombre del enemigo que quiere modificar: ");
						enemigo = sc.next();
					Iterator<enemigos> probar = arrayEnemigos.iterator();
					while(probar.hasNext()) {
						enemigos nombreEne = probar.next();	
						if (nombreEne.getNombre().equals(enemigo)){
							
							System.out.println("¿Que atributo desea modificar?");
							System.out.println("HP / Debilidades / Otros");
							opcion2 = sc.next();
							
							if (opcion2.equals("HP")) {
								do {
									System.out.println("Indica la vida del enemigo");
									hp = sc.nextInt();
										((enemigos)nombreEne).setHp(hp);
									if (hp <= 0) {
										System.out.println("El enemigo no tiene suficiente vida");
									}
								} while (hp <= 0);
							}
							else if (opcion2.equals("Debilidades")) {
								System.out.println("¿Desea modificar una debilidad Principal o Secundaria?");
								respuesta = sc.next();
								if (respuesta.equals("Principal")) {
									System.out.println("¿Desea modificar una debilidad Magica o Fisica?");
									respuesta = sc.next();
									
									if (respuesta.equals("Magica")) {
										System.out.println("Indique la debilidad magica");
										Magicos(magicos);
										magico1 = sc.next();
										nombreEne.setMagico1(magico1);
									}
									else {
										System.out.println("Indique la debilidad magica");
										Magicos(magicos);
										magico2 = sc.next();
										nombreEne.setMagico2(magico2);
									}
								}
								else {
									System.out.println("¿Desea modificar una debilidad Magica o Fisica?");
									respuesta = sc.next();
									
									if (respuesta.equals("Fisicos")) {
										System.out.println("Indique la debilidad fisica");
										Fisicos(fisicos);
										fisico1 = sc.next();
										nombreEne.setFisico1(fisico1);
									}
									else {
										System.out.println("Indique la debilidad fisica");
										Fisicos(fisicos);
										fisico2 = sc.next();
										nombreEne.setFisico2(fisico2);
									}
								}
								
							}
							else if (opcion2.equals("Otros")) {
								System.out.println("¿Desea modificar como afecta el equipamiento Superior o Inferior?");
								respuesta = sc.next();
								if (respuesta.equals("Superior")) {
									System.out.println("Indique si afecta");
									equip1 = sc.next();
									nombreEne.setEquip1(equip1);
								}
								else {
									System.out.println("Indique si afecta");
									equip2 = sc.next();
									nombreEne.setEquip2(equip2);
								}
							}
							
							
							
							respuesta = "Si";
						}
						else {
							System.out.println("El enemigo no existe");
							respuesta = "No";
						}

					}
						
					} while (respuesta.equals("No"));
				break;
				
				default:
					System.out.println("Indica un valor valido");
			}
		}
		respuesta = "Si";
	}
	
	protected void Instrucciones(String fisicos[], String magicos[], String eficacias[]) {
		System.out.println("Instrucciones");
		System.out.println("El juego consiste en superar una mazmorra llena de enemigos, ");
		System.out.println("tu trabajo será crear personajes capaces de vencer a los enemigos.");
		System.out.println("Los enemigos tendran una cantidad de vida fija y les podrás atacar cuantas veces quieras ");
		System.out.println("y con diferentes personajes en caso de ser necesario, los personajes creados se guardan y ");
		System.out.println("se puden reutilizar para atacar cualquier enemigo.");
		System.out.println();
		System.out.println("El juego termina cuando eliminas a todos los enemigos de la mazmorra.");
		System.out.println("Los personajes pueden tener hasta 4 atributos, 2 fisicos y 2 magicos, un titulo y 2 equipamientos, ");
		System.out.println("los cuales pueden ser beneficiosos o contraproducentes dependiendo del tipo de enemigo contra el que te estes enfrentado. ");
		System.out.println("Cada personaje tiene acceso a un titulo el cual le otorgará una mejora de atributos dependiendo de que ");
		System.out.println("tipo de enemigo este combatiendo.");
		System.out.println("Entre los atributos fisico podemos encontrar: ");
		Fisicos(fisicos);
		System.out.println("Entre los atributos magicos podemos encontrar: ");
		Magicos(magicos);
		System.out.println("Entre los titulos podemos encontrar: ");
		Titulos(eficacias);
	}
	protected String Repeticion(String respuesta, Scanner sc) {
		do {
		System.out.println("Su combate ha terminado deasea usar al mismo personaje?");
		System.out.println("Si o No");
		respuesta = sc.next();
		if (!respuesta.equals("Si")) {
			respuesta = "No";
		}
		} while(!respuesta.equals("Si"));
		return respuesta;
	}
	protected void Fisicos(String fisicos[]) {
		
		for (int i = 0;i < fisicos.length;i++) {
			System.out.println(fisicos[i]);
		}

	}
	protected void Magicos(String magicos[]) {
		for (int i = 0;i < magicos.length;i++) {
			System.out.println(magicos[i]);
		}
	}
	protected void Titulos(String eficacias[]) {
		for (int i = 0;i < eficacias.length;i++) {
			System.out.println(eficacias[i]);
		}
	}
	
	protected String FinalizarCombate(String respuesta, int hp, enemigos nombreEnemigo, Scanner sc) {
		if(hp>0){
            System.out.println("El " + nombreEnemigo.getNombre() + " se ha quedado a " + hp + " puntos de vida");
            if (nombreEnemigo instanceof enemigos) {
				((enemigos)nombreEnemigo).setHp(hp);
            }
            System.out.println("Desea utilizar el mismo personaje? Si o No");
            respuesta = sc.next();
		}
        else if(hp<=0){
        	System.out.println("Has derrotado al " + nombreEnemigo.getNombre());
        	if (nombreEnemigo instanceof enemigos) {
				((enemigos)nombreEnemigo).setHp(hp);
            }
        	System.out.println("Prepare su siguiente personaje para el proximo enemigo");
        	respuesta = "No";
        }
		return respuesta;
	}
}
